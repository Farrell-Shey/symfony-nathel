{% extends 'base.html.twig' %}

{% block title %}Hello SearchController!{% endblock %}

{% block body %}

<link href="//cdn.bootcss.com/noUiSlider/8.5.1/nouislider.min.css" rel="stylesheet">
<script  src="//cdn.bootcss.com/noUiSlider/8.5.1/nouislider.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<h1> PARTIE FORMULAIRE </h1>

<div id="slider" ></div>
<div id="slider_rank" ></div>
<style>
    main{
        padding-left:300px;

        padding-top: 150px;
    }
    input{
        background-color: #0a53be;
        color: black;
    }
    input[type="checkbox"]:not(:checked), input[type="checkbox"]:checked, input[type="file"]{
        display: block;
        background-color: #0c5460;
    }
    #slider{
        max-width: 50%;
        margin: auto;
    }
    #slider_rank{
        padding-top: 200px;
        max-width: 50%;
        margin: auto;
        color: #0a53be;
    }
    .noUi-tooltip{
        color: #1a1e21;
    }
</style>

    <!-- FORM DE LA PARTIE POOLSET -->
    {{ form(form, {'method': 'post', 'attr': {'id': 'poolset'}}) }}

    <!-- FORMS DE LA PARTIE MAPPOOLS & MAPS -->



        {% for key, value in _context  %}
            {% if key matches '/^\\d+$/' %}
                {{ form(value, {'attr': {'id': 'pool'}}) }}
            {% endif %}
            {% if 'map' in key %}
                {{ form(value, {'attr': {'id': 'add_map'}}) }}
            {% endif %}
        {% endfor %}



    <!-- PARTIE AJOUTER UN MAPPOOL -->
    {{ form(add, {'attr': {'id': 'add'}}) }}

<script>


    let slider = document.getElementById('slider')
    noUiSlider.create(slider, {
        start: [document.getElementById('form_range_min').value, document.getElementById('form_range_max').value],
        connect: true,
        range: {
            'min': 20,
            'max': 80
        },
        tooltips: [true, true]
    });
    let maxValue = document.getElementById('form_range_max')
    let minValue = document.getElementById('form_range_min')
    //vavar.value = slider.noUiSlider.get();
    //console.log(vavar.value);
    //document.write(slider.noUiSlider.get());
    slider.noUiSlider.on('update', function (values, handle) {
        let value = values[handle];
        if (handle) {
            maxValue.value = value;
        } else {
            minValue.value = Math.round(value);
        }
    });
    let slider_rank = document.getElementById('slider_rank')
    noUiSlider.create(slider_rank, {
        start: [document.getElementById('form_rank_min').value, document.getElementById('form_rank_max').value],
        connect: true,
        range: {
            'min': 0,
            'max': 10
        },
        tooltips: [true, true]
    });
    let maxValue_rank = document.getElementById('form_rank_max')
    let minValue_rank = document.getElementById('form_rank_min')
    //vavar.value = slider.noUiSlider.get();
    //console.log(vavar.value);
    //document.write(slider.noUiSlider.get());
    slider_rank.noUiSlider.on('update', function (values, handle) {
        let value = values[handle];
        if (handle) {
            maxValue_rank.value = value;
        } else {
            minValue_rank.value = Math.round(value)
        }
    });
</script>


<button id="test">'test'</button>


{% block content %}
    <script >
        //const axios = require("axios");
        const form = document.querySelector("form[id='poolset']")
        const add = document.querySelector("form[id='add']")
        const pools = document.querySelectorAll("form[id='pool']")
        const button = document.querySelector("button[id='test']")
        const add_map = document.querySelectorAll("form[id='add_map']")


        document.addEventListener('DOMContentLoaded', function() {
            function makePostRequest(input, path){
                return axios.post(path, input)
            }


            /////////////////////// POOLSET DATA /////////////////////////////

            form.addEventListener('submit', function(e) {
                e.preventDefault();
                const data = new FormData(form)


                let request = makePostRequest(data, '{{ (path('edit_save')) }}')
                // EN JS, il reste à faire l'event qui RENVOIE la requête
                // scrollable à true signifie qu'il reste pools à afficher
                const { rank_min, rank_max, title, std,
                    mania, taiko, ctb } = request
                const form_title = document.getElementById('form_title')
                const form_rank_min = document.getElementById('form_rank_min')
                const form_rank_max = document.getElementById('form_rank_max')
                const form_range_min = document.getElementById('form_range_min')
                const form_range_max = document.getElementById('form_range_max')
                const form_std = document.getElementById('form_std')
                const form_mania = document.getElementById('form_mania')
                const form_taiko = document.getElementById('form_taiko')
                const form_ctb = document.getElementById('form_ctb')
                const form_image = document.getElementById('form_image')
                form_image.value = ""
                //b.setAttribute("value", "helloButton");
            })


            /////////////////////// MAPPOOLS & MAPS DATA /////////////////////////////

            button.addEventListener('click', function(e) {
                e.preventDefault();

                pools.forEach(f => {

                    const data = new FormData(f)
                    let request = makePostRequest(data, '{{ (path('save_mappools')) }}')

                })
            })

            add_map.forEach(f => {
                /////////////////////// AJOUTER UNE MAP /////////////////////////////
                f.addEventListener('submit', function(e) {
                    e.preventDefault();

                    const data = new FormData(f)
                    console.log(data)
                    //let request = makePostRequest(data, '{{ (path('save_mappools')) }}')

                })
            })


            /////////////////////// AJOUTER UN MAPPOOL /////////////////////////////
            add.addEventListener('submit', function(e) {
                e.preventDefault();
                const data = new FormData(add)



                makePostRequest(data, '{{ (path('add_mappool')) }}').then(function (response){
                    let request = response.data

                    let f = document.createElement("form")
                    f.setAttribute('method',"post")
                    f.setAttribute('id', 'pool')

                    let i = document.createElement("input") //input element, text
                    i.setAttribute('label', 'Mappool Title')
                    i.setAttribute('type', 'text')
                    i.setAttribute('value',request['title'])
                    i.setAttribute('id','form_title')

                    let j = document.createElement("input") //input element, text
                    j.setAttribute('type', 'checkbox')
                    i.setAttribute('label', 'Delete')
                    j.setAttribute('id','form_delete')

                    let h = document.createElement("input") //input element, text
                    h.setAttribute('type', 'hidden')
                    h.setAttribute('value',request['id'])
                    h.setAttribute('id','form_id')

                    f.appendChild(i)
                    f.appendChild(j)
                    f.appendChild(h)

                    document.getElementsByTagName('main')[0].appendChild(f);
                    console.log(f)
                })


            })
        })
    </script>

{% endblock %}

{% endblock %}